---
apiVersion: extensions/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default
    apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: docker/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: docker/default
  labels:
    app: grafana
    chart: grafana-1.26.1
    heritage: Tiller
    release: grafana
  name: grafana
  namespace: grafana
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    rule: RunAsAny
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: false
  requiredDropCapabilities:
  - FOWNER
  - FSETID
  - KILL
  - SETGID
  - SETUID
  - SETPCAP
  - NET_BIND_SERVICE
  - NET_RAW
  - SYS_CHROOT
  - MKNOD
  - AUDIT_WRITE
  - SETFCAP
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - configMap
  - emptyDir
  - projected
  - secret
  - downwardAPI
  - persistentVolumeClaim

---
apiVersion: v1
data:
  admin-password: cDUxUFBxNDZjcVBnU1Q1NDZQbjZ2RTUyWGtGNmYyUHRmS0lhU0h5NQ==
  admin-user: YWRtaW4=
  ldap-toml: ""
kind: Secret
metadata:
  labels:
    app: grafana
    chart: grafana-1.26.1
    heritage: Tiller
    release: grafana
  name: grafana
  namespace: grafana
type: Opaque

---
apiVersion: v1
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [auth.google]
    allow_sign_up = true
    allowed_domains = brig.gs lbrlabs.com lee@leebriggs.co.uk
    auth_url = https://accounts.google.com/o/oauth2/auth
    client_id = 1032916947128-gfsbta7iqcs2g236eu42j71j00l9g6le.apps.googleusercontent.com
    enabled = true
    token_url = https://accounts.google.com/o/oauth2/token
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [server]
    domain = home.lbrlabs.com
    root_url = http://grafana.home.lbrlabs.com
kind: ConfigMap
metadata:
  labels:
    app: grafana
    chart: grafana-1.26.1
    heritage: Tiller
    release: grafana
  name: grafana
  namespace: grafana

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: grafana
    chart: grafana-1.26.1
    heritage: Tiller
    release: grafana
  name: grafana
  namespace: grafana

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grafana
    chart: grafana-1.26.1
    heritage: Tiller
    release: grafana
  name: grafana
  namespace: grafana
spec:
  ports:
  - name: service
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: grafana
    release: grafana
  type: ClusterIP

---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: grafana
    chart: grafana-1.26.1
    heritage: Tiller
    release: grafana
  name: grafana
  namespace: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      release: grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        release: grafana
    spec:
      containers:
      - env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              key: admin-user
              name: grafana
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: grafana
        image: grafana/grafana:5.4.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          timeoutSeconds: 30
        name: grafana
        ports:
        - containerPort: 80
          name: service
          protocol: TCP
        - containerPort: 3000
          name: grafana
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
        volumeMounts:
        - mountPath: /etc/grafana/grafana.ini
          name: config
          subPath: grafana.ini
        - mountPath: /var/lib/grafana
          name: storage
      securityContext:
        fsGroup: 472
        runAsUser: 472
      serviceAccountName: grafana
      volumes:
      - configMap:
          name: grafana
        name: config
      - name: storage

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    app: grafana
    chart: grafana-1.26.1
    heritage: Tiller
    release: grafana
  name: grafana
  namespace: grafana
spec:
  rules:
  - host: grafana.home.lbrlabs.com
    http:
      paths:
      - backend:
          serviceName: grafana
          servicePort: 80
        path: /

---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: grafana
  name: grafana

